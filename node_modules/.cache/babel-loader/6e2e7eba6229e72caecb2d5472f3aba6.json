{"ast":null,"code":"var _jsxFileName = \"/Users/nadiaayala/Desktop/react-calculo-salario/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport BaseSalaryInput from './components/BaseSalaryInput';\nimport ReadOnlyInput from './components/ReadOnlyInput';\nexport default class App extends Component {\n  constructor() {\n    super();\n\n    this.handleInputChange = async salary => {\n      console.log(salary);\n      await this.setState({\n        baseSalary: parseFloat(salary)\n      });\n      this.calculateINSSDiscount();\n      this.calculateIRPFDiscount();\n    };\n\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.setState({\n      baseSalary: 0,\n      discountINSS: 0,\n      baseIRPF: 0,\n      discountIRPF: 0\n    });\n  }\n\n  componentDidUpdate() {}\n\n  calculateINSSDiscount() {\n    let {\n      baseSalary,\n      discountINSS\n    } = this.state;\n    console.log(baseSalary);\n    let percentage = 0;\n    let discount = 0;\n    baseSalary = parseFloat(baseSalary);\n    console.log(baseSalary);\n\n    if (baseSalary <= 1045.00) {\n      percentage = 0.075;\n    } else if (baseSalary <= 2089.60) {\n      percentage = 0.09;\n    } else if (baseSalary <= 3134.40) {\n      percentage = 0.12;\n    } else if (baseSalary <= 6101.06) {\n      percentage = 0.14;\n    }\n\n    discount = baseSalary * percentage;\n\n    if (this.state.discountINSS != discount) {\n      this.setState({\n        discountINSS: discount\n      });\n    }\n\n    console.log(`The inss discount will be ${this.state.discountINSS}`);\n  }\n\n  async calculateIRPFDiscount() {\n    let {\n      baseSalary,\n      discountINSS\n    } = this.state;\n    let baseIRPF = parseFloat(baseSalary) - discountINSS;\n    let percentage = 0;\n    let discountIRPF = 0;\n\n    if (baseIRPF <= 1903.98) {\n      percentage = 0;\n      discountIRPF = 0;\n    } else {\n      if (baseIRPF <= 2826.65) {\n        percentage = 0.075;\n      } else if (baseIRPF <= 3751.06) {\n        percentage = 0.15;\n      } else if (baseIRPF <= 4664.68) {\n        percentage = 0.225;\n      } else if (baseIRPF > 4664.68) {\n        percentage = 0.275;\n      }\n    }\n\n    discountIRPF = baseIRPF * percentage;\n    await this.setState({\n      baseIRPF,\n      discountIRPF\n    });\n    console.log(`The IRPF base will be ${this.state.baseIRPF} and the IRPF discount will be ${this.state.discountIRPF}`);\n  }\n\n  render() {\n    const {\n      baseSalary\n    } = this.state.baseSalary;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(BaseSalaryInput, {\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ReadOnlyInput, {\n      value: baseSalary,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/nadiaayala/Desktop/react-calculo-salario/src/App.js"],"names":["React","Component","BaseSalaryInput","ReadOnlyInput","App","constructor","handleInputChange","salary","console","log","setState","baseSalary","parseFloat","calculateINSSDiscount","calculateIRPFDiscount","state","componentDidMount","discountINSS","baseIRPF","discountIRPF","componentDidUpdate","percentage","discount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport BaseSalaryInput from './components/BaseSalaryInput';\nimport ReadOnlyInput from './components/ReadOnlyInput';\n\nexport default class App extends Component {\nconstructor(){\n  super();\n  this.state = {\n    \n  }\n}\n\n  componentDidMount() {\n    this.setState({\n      baseSalary: 0,\n      discountINSS: 0,\n      baseIRPF: 0,\n      discountIRPF: 0,\n    });\n  }\n\n  componentDidUpdate() {\n        \n    }\n\n  calculateINSSDiscount() {\n    let { baseSalary, discountINSS } = this.state;\n    console.log(baseSalary);\n    let percentage = 0;\n    let discount = 0;\n    baseSalary = parseFloat(baseSalary);\n    console.log(baseSalary);\n    if (baseSalary <= 1045.00) {\n      percentage = 0.075;\n    }\n    else if (baseSalary <= 2089.60) {\n      percentage = 0.09;\n    }\n    else if (baseSalary <= 3134.40) {\n      percentage = 0.12;\n    }\n    else if (baseSalary <= 6101.06) {\n      percentage = 0.14;\n    }\n\n    discount = baseSalary * percentage;\n\n    if (this.state.discountINSS != discount) {\n      this.setState({\n        discountINSS: discount,\n      });\n    }\n\n\n    console.log(`The inss discount will be ${this.state.discountINSS}`);\n  }\n\n  async calculateIRPFDiscount() {\n    let { baseSalary, discountINSS } = this.state;\n    let baseIRPF = parseFloat(baseSalary) - discountINSS;\n    let percentage = 0;\n    let discountIRPF = 0;\n    if(baseIRPF <= 1903.98){\n       percentage = 0;\n       discountIRPF = 0;\n    }\n    else{\n      if (baseIRPF <= 2826.65) {\n        percentage = 0.075;\n      }\n      else if (baseIRPF <= 3751.06) {\n        percentage = 0.15;\n      }\n      else if (baseIRPF <= 4664.68) {\n        percentage = 0.225;\n      }\n      else if (baseIRPF > 4664.68) {\n        percentage = 0.275;\n      }\n\n    }\n      discountIRPF = baseIRPF * percentage;\n\n      await this.setState({\n          baseIRPF,\n          discountIRPF,\n        });\n    \n      console.log(`The IRPF base will be ${this.state.baseIRPF} and the IRPF discount will be ${this.state.discountIRPF}`);\n    }\n    \n    \n  handleInputChange = async (salary) => {\n    console.log(salary);\n    await this.setState({\n      baseSalary: parseFloat(salary),\n    });\n    this.calculateINSSDiscount();\n    this.calculateIRPFDiscount();\n  };\n\n\n  render() {\n    const {baseSalary} = this.state.baseSalary;\n    return (\n      <div className=\"App\">\n        <BaseSalaryInput onChange = {this.handleInputChange} />\n        <ReadOnlyInput value={baseSalary}/>\n      </div>\n    );\n  }\n\n}\n\n\n"]},"metadata":{},"sourceType":"module"}