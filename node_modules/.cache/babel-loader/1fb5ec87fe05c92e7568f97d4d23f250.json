{"ast":null,"code":"var _jsxFileName = \"/Users/nadiaayala/Desktop/react-calculo-salario/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport BaseSalaryInput from './components/BaseSalaryInput';\nimport ReadOnlyInput from './components/ReadOnlyInput';\nimport ReadOnlyInputDiscount from './components/ReadOnlyInputDiscount';\nimport ProgressBar from './components/ProgressBar';\nexport default class App extends Component {\n  constructor() {\n    super();\n\n    this.handleInputChange = async salary => {\n      console.log(salary);\n      await this.setState({\n        baseSalary: parseFloat(salary)\n      });\n      this.calculateINSSDiscount();\n      this.calculateIRPFDiscount();\n      this.calculateNetSalary();\n    };\n\n    this.state = {\n      baseSalary: 0,\n      discountINSS: 0,\n      baseIRPF: 0,\n      discountIRPF: 0,\n      percDiscountINSS: 0,\n      percDiscountIRPF: 0,\n      netSalary: 0,\n      netSalaryPerc: 0\n    };\n  }\n\n  calculateINSSDiscount() {\n    let {\n      baseSalary,\n      discountINSS\n    } = this.state;\n    console.log(baseSalary);\n    let percentage = 0;\n    let discount = 0;\n    baseSalary = parseFloat(baseSalary);\n    console.log(baseSalary);\n\n    if (baseSalary <= 1045.00) {\n      percentage = 0.075;\n    } else if (baseSalary <= 2089.60) {\n      percentage = 0.09;\n    } else if (baseSalary <= 3134.40) {\n      percentage = 0.12;\n    } else if (baseSalary <= 6101.06) {\n      percentage = 0.14;\n    }\n\n    discount = baseSalary * percentage;\n\n    if (this.state.discountINSS != discount) {\n      this.setState({\n        discountINSS: discount,\n        percDiscountINSS: percentage\n      });\n    }\n\n    console.log(`The inss discount will be ${this.state.discountINSS}`);\n  }\n\n  async calculateIRPFDiscount() {\n    let {\n      baseSalary,\n      discountINSS\n    } = this.state;\n    let baseIRPF = parseFloat(baseSalary) - discountINSS;\n    let percentage = 0;\n    let discountIRPF = 0;\n\n    if (baseIRPF <= 1903.98) {\n      percentage = 0;\n      discountIRPF = 0;\n    } else {\n      if (baseIRPF <= 2826.65) {\n        percentage = 0.075;\n      } else if (baseIRPF <= 3751.06) {\n        percentage = 0.15;\n      } else if (baseIRPF <= 4664.68) {\n        percentage = 0.225;\n      } else if (baseIRPF > 4664.68) {\n        percentage = 0.275;\n      }\n    }\n\n    discountIRPF = baseIRPF * percentage;\n    await this.setState({\n      baseIRPF,\n      discountIRPF,\n      percDiscountIRPF: percentage\n    });\n    console.log(`The IRPF base will be ${this.state.baseIRPF} and the IRPF discount will be ${this.state.discountIRPF}`);\n  }\n\n  async calculateNetSalary() {\n    const netSalary = this.state.baseSalary - this.state.discountINSS - this.state.discountIRPF;\n    console.log(netSalary);\n    const netSalaryPerc = netSalary / this.state.baseSalary * 100;\n    this.setState({\n      netSalary,\n      netSalaryPerc\n    });\n  }\n\n  render() {\n    const {\n      perc\n    } = this.state.percDiscountINSS;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(BaseSalaryInput, {\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ReadOnlyInput, {\n      val: this.state.baseSalary,\n      title: \"Base INSS:\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(ReadOnlyInputDiscount, {\n      val: this.state.discountINSS,\n      percentage: this.state.percDiscountINSS,\n      title: \"Desconto INSS:\",\n      id: \"discINSS\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(ReadOnlyInput, {\n      val: this.state.baseIRPF,\n      title: \"Base IRPF:\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(ReadOnlyInputDiscount, {\n      val: this.state.discountIRPF,\n      percentage: this.state.percDiscountIRPF,\n      title: \"Desconto IRPF:\",\n      id: \"discIRPF\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ReadOnlyInputDiscount, {\n      val: this.state.netSalary,\n      percentage: this.state.netSalaryPerc * 100,\n      title: \"Sal\\xE1rio l\\xEDquido:\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ProgressBar, {\n      discINSS: this.state.percDiscountINSS * 100,\n      discIRPF: this.state.percDiscountIRPF * 100,\n      netSalary: this.state.netSalaryPerc,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/nadiaayala/Desktop/react-calculo-salario/src/App.js"],"names":["React","Component","BaseSalaryInput","ReadOnlyInput","ReadOnlyInputDiscount","ProgressBar","App","constructor","handleInputChange","salary","console","log","setState","baseSalary","parseFloat","calculateINSSDiscount","calculateIRPFDiscount","calculateNetSalary","state","discountINSS","baseIRPF","discountIRPF","percDiscountINSS","percDiscountIRPF","netSalary","netSalaryPerc","percentage","discount","render","perc"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport BaseSalaryInput from './components/BaseSalaryInput';\nimport ReadOnlyInput from './components/ReadOnlyInput';\nimport ReadOnlyInputDiscount from './components/ReadOnlyInputDiscount';\nimport ProgressBar from './components/ProgressBar';\n\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      baseSalary: 0,\n      discountINSS: 0,\n      baseIRPF: 0,\n      discountIRPF: 0,\n      percDiscountINSS: 0,\n      percDiscountIRPF: 0,\n      netSalary: 0,\n      netSalaryPerc:0\n    }\n  }\n  \n  calculateINSSDiscount() {\n    let { baseSalary, discountINSS } = this.state;\n    console.log(baseSalary);\n    let percentage = 0;\n    let discount = 0;\n    baseSalary = parseFloat(baseSalary);\n    console.log(baseSalary);\n    if (baseSalary <= 1045.00) {\n      percentage = 0.075;\n    }\n    else if (baseSalary <= 2089.60) {\n      percentage = 0.09;\n    }\n    else if (baseSalary <= 3134.40) {\n      percentage = 0.12;\n    }\n    else if (baseSalary <= 6101.06) {\n      percentage = 0.14;\n    }\n\n    discount = baseSalary * percentage;\n\n    if (this.state.discountINSS != discount) {\n      this.setState({\n        discountINSS: discount,\n        percDiscountINSS: percentage\n      });\n    }\n\n\n    console.log(`The inss discount will be ${this.state.discountINSS}`);\n  }\n\n  async calculateIRPFDiscount() {\n    let { baseSalary, discountINSS } = this.state;\n    let baseIRPF = parseFloat(baseSalary) - discountINSS;\n    let percentage = 0;\n    let discountIRPF = 0;\n    if (baseIRPF <= 1903.98) {\n      percentage = 0;\n      discountIRPF = 0;\n    }\n    else {\n      if (baseIRPF <= 2826.65) {\n        percentage = 0.075;\n      }\n      else if (baseIRPF <= 3751.06) {\n        percentage = 0.15;\n      }\n      else if (baseIRPF <= 4664.68) {\n        percentage = 0.225;\n      }\n      else if (baseIRPF > 4664.68) {\n        percentage = 0.275;\n      }\n\n    }\n    discountIRPF = baseIRPF * percentage;\n\n    await this.setState({\n      baseIRPF,\n      discountIRPF,\n      percDiscountIRPF: percentage,\n    });\n\n    console.log(`The IRPF base will be ${this.state.baseIRPF} and the IRPF discount will be ${this.state.discountIRPF}`);\n  }\n\n  async calculateNetSalary(){\n    const netSalary = (this.state.baseSalary - this.state.discountINSS) - (this.state.discountIRPF);\n    console.log(netSalary);\n    const netSalaryPerc = (netSalary / this.state.baseSalary) * 100;\n    this.setState({\n      netSalary,\n      netSalaryPerc\n    })\n  }\n\n\n  handleInputChange = async (salary) => {\n    console.log(salary);\n    await this.setState({\n      baseSalary: parseFloat(salary),\n    });\n    this.calculateINSSDiscount();\n    this.calculateIRPFDiscount();\n    this.calculateNetSalary();\n  };\n\n\n  render() {\n    const {perc} = this.state.percDiscountINSS ;\n    return (\n      <div className=\"App\">\n        <BaseSalaryInput onChange={this.handleInputChange} />\n        <div className=\"row\">\n          <div className=\"row\">\n            <ReadOnlyInput val={this.state.baseSalary} title='Base INSS:' />\n            <ReadOnlyInputDiscount val={this.state.discountINSS} percentage={this.state.percDiscountINSS} title='Desconto INSS:' id='discINSS'/>\n            <ReadOnlyInput val={this.state.baseIRPF} title='Base IRPF:' />\n            <ReadOnlyInputDiscount val={this.state.discountIRPF} percentage={this.state.percDiscountIRPF} title='Desconto IRPF:' id='discIRPF'/>\n          </div>\n          <div> \n          <ReadOnlyInputDiscount val={this.state.netSalary} percentage={this.state.netSalaryPerc *100} title='Salário líquido:'/>\n          </div>\n          <div>\n            <ProgressBar discINSS = {this.state.percDiscountINSS * 100} discIRPF = {this.state.percDiscountIRPF * 100} netSalary = {this.state.netSalaryPerc }/>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n\n}\n\n\n"]},"metadata":{},"sourceType":"module"}