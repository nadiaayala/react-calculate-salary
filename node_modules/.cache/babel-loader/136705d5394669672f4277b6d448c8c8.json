{"ast":null,"code":"var _jsxFileName = \"/Users/nadiaayala/Desktop/react-calculo-salario/src/components/ReadOnlyInputDiscount.js\";\nimport React, { Component } from 'react';\nimport css from './readOnlyInput.module.css';\nexport default class ReadOnlyInput extends Component {\n  componentDidMount() {\n    console.log(this.props);\n  } // componentDidUpdate(){\n  //     console.log('Read only DISCOUNT updated');\n  // }\n\n\n  render() {\n    const {\n      val,\n      percentage,\n      title,\n      id\n    } = this.props;\n    const perc = percentage * 100;\n    const formatedVal = console.log(new Intl.NumberFormat('pt-BR', {\n      style: 'currency',\n      currency: 'BRL'\n    }).format(val));\n    const classes = id === 'discINSS' ? ` ${css.result}  orange-text darken-3` : id === 'discIRPF' ? `${css.result}  red-text darken-3` : `${css.result} teal-text lighten-2`;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-field col s3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: classes,\n      readOnly: true,\n      value: `${Intl.NumberFormat(val)} (${perc}%)`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"active\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }\n    }, \" \", title, \" \"));\n  }\n\n}","map":{"version":3,"sources":["/Users/nadiaayala/Desktop/react-calculo-salario/src/components/ReadOnlyInputDiscount.js"],"names":["React","Component","css","ReadOnlyInput","componentDidMount","console","log","props","render","val","percentage","title","id","perc","formatedVal","Intl","NumberFormat","style","currency","format","classes","result"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,4BAAhB;AAEA,eAAe,MAAMC,aAAN,SAA4BF,SAA5B,CAAsC;AACjDG,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACH,GAHgD,CAIjD;AACA;AACA;;;AACAC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,GAAD;AAAMC,MAAAA,UAAN;AAAkBC,MAAAA,KAAlB;AAAyBC,MAAAA;AAAzB,QAA+B,KAAKL,KAA1C;AACA,UAAMM,IAAI,GAAGH,UAAU,GAAG,GAA1B;AACA,UAAMI,WAAW,GAAGT,OAAO,CAACC,GAAR,CAAY,IAAIS,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AAAEC,MAAAA,KAAK,EAAE,UAAT;AAAqBC,MAAAA,QAAQ,EAAE;AAA/B,KAA/B,EAAuEC,MAAvE,CAA8EV,GAA9E,CAAZ,CAApB;AACA,UAAMW,OAAO,GAAGR,EAAE,KAAK,UAAP,GAAqB,IAAGV,GAAG,CAACmB,MAAO,wBAAnC,GAA8DT,EAAE,KAAK,UAAP,GAAqB,GAAEV,GAAG,CAACmB,MAAO,qBAAlC,GAA0D,GAAEnB,GAAG,CAACmB,MAAO,sBAArJ;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAED,OAA9B;AAAuC,MAAA,QAAQ,MAA/C;AAAgD,MAAA,KAAK,EAAG,GAAEL,IAAI,CAACC,YAAL,CAAkBP,GAAlB,CAAuB,KAAII,IAAK,IAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAO,MAAA,SAAS,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA6BF,KAA7B,MAFJ,CADJ;AAMH;;AAlBgD","sourcesContent":["import React, { Component } from 'react';\nimport css from './readOnlyInput.module.css';\n\nexport default class ReadOnlyInput extends Component {\n    componentDidMount(){\n        console.log(this.props);\n    }\n    // componentDidUpdate(){\n    //     console.log('Read only DISCOUNT updated');\n    // }\n    render() { \n        const {val, percentage, title, id} = this.props;\n        const perc = percentage * 100;\n        const formatedVal = console.log(new Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(val));\n        const classes = id === 'discINSS' ? ` ${css.result}  orange-text darken-3` : (id === 'discIRPF' ? `${css.result}  red-text darken-3` : `${css.result} teal-text lighten-2`);\n        return ( \n            <div className=\"input-field col s3\">\n                <input type=\"text\" className={classes} readOnly value={`${Intl.NumberFormat(val)} (${perc}%)`}/>\n                <label className=\"active\" > {title} </label>\n            </div>\n         );\n    }\n}\n \n "]},"metadata":{},"sourceType":"module"}